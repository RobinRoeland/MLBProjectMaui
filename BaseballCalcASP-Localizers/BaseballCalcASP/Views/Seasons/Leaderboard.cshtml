@model IEnumerable<BaseballModelsLib.Models.Season>

@{
    ViewData["Title"] = @Localizer["Leaderboard"];
}

<!--<link rel="stylesheet" href="../Css/Tables.css"/>-->
<style>
    main.pb-3 {
        border: 1px solid #dee2e6;
        border-radius: 15px;
        padding: 5px !important;
        display: flex;
        flex-wrap: nowrap;
        flex-direction: column;
        gap: 5px;
    }

    input {
        all: unset;
        width: 100%;
        padding: 3px 10px 5px 10px;
        border-radius: 15px;
        box-sizing: border-box;
        border: 1px solid gray;
    }

    table.table {
        width: 100%;
        margin-bottom: unset;
    }

    main > div {
        border: 1px solid gray;
        border-radius: 15px;
    }

    .table > :not(caption) > * > * {
        border-bottom: unset;
    }

    tbody tr {
        border-bottom: 1px solid #dee2e6;
    }

    tbody tr:last-of-type {
        border-bottom: unset;
    }
</style>


<h1>@Localizer["Leaderboard"]</h1>

<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Localizer["Player"]
                </th>
                <th>
                    Nr
                </th>
                <th>
                    @Localizer["Year"]
                </th>
                <th>
                    @Localizer["Games"]
                </th>
                <th>
                    TA
                </th>
                <th>
                    SLG
                </th>
                <th>
                    BA
                </th>
                <th>
                    AB
                </th>
                <th>
                    H (Hit)
                </th>
                <th>
                    K (Hit)
                </th>
                <th>
                    BB
                </th>
                <th>
                    HBP
                </th>
                <th>
                    BB/K
                </th>
                <th>
                    TB
                </th>
                <th>
                    1B
                </th>
                <th>
                    2B
                </th>
                <th>
                    3B
                </th>
                <th>
                    HR
                </th>
                <th>
                    OBP
                </th>
                <th>
                    OPS
                </th>
                <th>
                    SB
                </th>
                <th>
                    CS
                </th>
                <th>
                    K (pitch)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                float atbats = item.PlateAppearences - (item.BaseOnBalls + item.HitByPitch + item.SacrificeFlies + item.SacrificeHits); //, interference, or obstruction
                float obp = (item.Hits + item.BaseOnBalls + item.HitByPitch) / (atbats + item.BaseOnBalls + item.HitByPitch + item.SacrificeFlies);
                float totalbases = item.Singles + 2 * item.Doubles + 3 * item.Triples + 4 * item.HomeRuns;
                float sluggingavg = totalbases / atbats;
                BaseballModelsLib.Models.Player player = ViewBag.players.Find(item.PlayerKey);

                <tr>
                    <td>
                        @player.Name
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.Rugnummer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GamesPlayed)
                    </td>
                    <td>
                        @Math.Round((totalbases + item.BaseOnBalls + item.StolenBases) / (item.PlateAppearences + item.CaughtStealing), 2)
                    </td>
                    <td>
                        @Math.Round(sluggingavg, 2)
                    </td>
                    <td style="width: fit-content">
                        @Math.Round(item.Hits / atbats, 3)
                    </td>
                    <td>
                        @atbats
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hits)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HStrikeOuts)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BaseOnBalls)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HitByPitch)
                    </td>
                    <td>
                        @(Math.Round((double)(item.BaseOnBalls / item.HStrikeOuts), 2))
                    </td>
                    <td>
                        @totalbases
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Singles)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Doubles)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Triples)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeRuns)
                    </td>
                    <td>
                        @Math.Round(obp, 2)
                    </td>
                    <td>
                        @Math.Round((obp + sluggingavg), 2)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StolenBases)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CaughtStealing)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PStrikeOuts)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">@Localizer["Details"]</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>